==================
6.14.1 (UNRELEASED)
==================

<Short description>

To install Kurento Media Server: :doc:`/user/installation`.



Added
=====

New generateOffer(offerToReceiveAudio, offerToReceiveVideo)
-----------------------------------------------------------

Albeit the way applications are typically written have the SDP Offer/Answer being started from the client (i.e. a client browser sends an SDP Offer to KMS), it has always been possible to do the opposite, and start the WebRTC negotiation from KMS, with the client method ``generateOffer()`` (i.e. KMS generates an SDP Offer that is sent to the client browser).

However, SDP Offers generated by KMS would always contain **one audio** and **one video** media-level sections (those lines starting with ``m=`` in the SDP). This would make it impossible to send an audio-only or video-only offer to the clients.

The WebRTC implementation in Kurento strives to be familiar to JavaScript developers who know about the `RTCPeerConnection <https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection`__ browser API, and in this case we are introducing the ``offerToReceiveAudio`` / ``offerToReceiveVideo`` options that are well known from the `RTCPeerConnection.createOffer() <https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer`__ method. These options can be used to change the SDP Offer generation in KMS, so it is now possible to control whether the offer inclused audio or video, separately.

Example Java code, for an audio-only offer:

.. code-block:: java

   import org.kurento.client.OfferOptions;
   [...]

   OfferOptions options = new OfferOptions();
   options.setOfferToReceiveAudio(true);
   options.setOfferToReceiveVideo(false);

   String sdpOffer = webRtcEp.generateOffer(options);



New WebRTC settings: `externalIPv4`, `externalIPv6`
---------------------------------------------------

The `externalAddress` parameter, introduced in Kurento 6.13.0, offered a way to tell the media server about its own public IP, without the need to use an additional STUN server. This is a nice feature because then the WebRTC connectivity checks could save some time trying to find out about the public IP in the first place. However, `externalAddress` would replace all of IPv4 *and* IPv6 addresses in the ICE candidate gathering phase, which is problematic because the actual type of address wasn't being taken into account for the substitution.

With the new parameters, `externalIPv4` and `externalIPv6`, it is now possible to define either an static public IPv4 and/or IPv6 addresses. It is now possible to specify any of those, or both at the same time. As usual, this can be done upon installation, by editing the Kurento configuration files, or otherwise it can be set dynamically by the Client Application, via an API call offered by the Java or JavaScript client SDKs.

These parameters supersede the `externalAddress`, which now is **deprecated** and scheduled for removal in the next major release of Kurento.

Thanks to `@prlanzarin <https://github.com/prlanzarin>`__ (Paulo Lanzarin) for contributing these new parameters in `Kurento/kms-elements#27 <https://github.com/Kurento/kms-elements/pull/27>`__ (*Add externalIPv4/externalIPv6 configs and API methods for them*).




Changed
=======

* Description.



Deprecated
==========

* `externalAddress` should be replaced by `externalIPv4` and/or `externalIPv6`.



Fixed
=====

* Backported all commits from GStreamer Merge Request 38 (https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/-/merge_requests/38), which fixes a memory leak related to incorrect handling of RTCP packets, as described in issue 522 (https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/-/issues/522).



Fixed libnice DDoS
------------------

Some users reported a worrying bug that could end up used to force DDoS attacks to machines running Kurento Media Server. The summary of it is that simply sending any bit of data to one of the TCP-Passive ports where the WebRTC engine was listening for connections, would cause a thread to spin-lock and use 100% of a CPU core.

The issue was studied and located to be in `libnice <https://libnice.freedesktop.org/>`__, a 3rd-party library that Kurento uses to implement the ICE protocol which is part of WebRTC. *libnice* developers had a great reaction time and this issue got fixed in a matter of days!

Kurento now brings the newest version of this library, meaning that our favorite media server is now safer and more robust.

Thanks to `@darrenhp <https://github.com/darrenhp>`__ for reporting this issue in `Kurento/bugtracker#486 <https://github.com/Kurento/bugtracker/issues/486>`__ (*libnice cause cpu 100% and don't restore after 'attacked' by a spider or security-scaner*).



Big change
==========

Full description, with images, code samples, external links, etc.

Some useful syntax examples:

* Documentation section: :doc:`/user/tutorials`

* Glossary term: :term:`SDP`

* Inline link: `How to avoid Data Channel breaking <https://blog.mozilla.org/webrtc/how-to-avoid-data-channel-breaking/>`__

* Code block:

  .. code-block:: text

     Text in the code block



Thanks for the change
---------------------

* `@Username <https://github.com/Username>`__ (Full Name) for `Kurento/bugtracker#IssueNum <https://github.com/Kurento/bugtracker/issues/IssueNum>`__ (*Issue title*).
* `@Username <https://github.com/Username>`__ for `Kurento/bugtracker#IssueNum <https://github.com/Kurento/bugtracker/issues/IssueNum>`__ (*Issue title*).
* `@Username <https://github.com/Username>`__ for `Kurento/kms-core#PrNum <https://github.com/Kurento/kms-core/pull/PrNum>`__ (*Pull Request title*).



Thank You
=========

There were other changes and fixes contributed by users, who merit our sincere appreciation and thanks for sharing their work with the Kurento project:

**kms-elements**

* `@prlanzarin <https://github.com/prlanzarin>`__ (Paulo Lanzarin) for `Kurento/kms-elements#23 <https://github.com/Kurento/kms-elements/pull/23>`__ (*Fix STUN server usage when stunServerPort isn't set and the default value is to be used*).

* `@t-mullen <https://github.com/t-mullen>`__ (Thomas Mullen) for `Kurento/kms-elements#24 <https://github.com/Kurento/kms-elements/pull/24>`__ (*Fix incorrect cropping in AlphaBlending element*).

**kurento-client-js**

* `@marcosdourado <https://github.com/marcosdourado>`__ (Marcos Dourado) for `Kurento/kurento-client-js#10 <https://github.com/Kurento/kurento-client-js/pull/10>`__ (*remove lib error-tojson and add method locally to stringify error*).
* `@tuttieee <https://github.com/tuttieee>`__ (Yuichiro Tsuchiya) for `Kurento/kurento-client-js#11 <https://github.com/Kurento/kurento-client-js/pull/11>`__ (*Fix register() calls inside lib/index.js*).

**kurento-tutorial-js**

* `@tuttieee <https://github.com/tuttieee>`__ (Yuichiro Tsuchiya) for `Kurento/kurento-tutorial-js#9 <https://github.com/Kurento/kurento-tutorial-js/pull/9>`__ (*Use IceCandidateFound event instead of deprecated OnIceCandidate event*).

**RepoName**

* ...
