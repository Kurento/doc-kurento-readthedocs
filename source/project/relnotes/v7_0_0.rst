==================
7.0.0 (UNRELEASED)
==================

A new Major version release of Kurento. This marks the "development complete" iteration of the Kurento project.

To install Kurento Media Server: :doc:`/user/installation`.

.. contents:: Table of Contents



Added
=====

* **Small addition**. Description.



Big addition name
-----------------

Full description, with images, code samples, external links, etc. Some useful syntax examples:

* Documentation section: :doc:`/user/tutorials`.

* Glossary term: :term:`SDP`.

* Inline link: `How to avoid Data Channel breaking <https://blog.mozilla.org/webrtc/how-to-avoid-data-channel-breaking/>`__.

* Blocks:

  .. code-block:: java

     System.out.println("Some example Java code");

  .. code-block:: text

     Some literal command output

  .. note::

     Something to keep in mind.

Thanks to `@Username <https://github.com/Username>`__ (Full Name, if available) for `#IssueNum <https://github.com/Kurento/kurento/issues/IssueNum>`__ (*Issue title*).
Thanks to `@Username <https://github.com/Username>`__ (Full Name, if available) for `#PrNum <https://github.com/Kurento/kurento/pull/PrNum>`__ (*Pull Request title*).



Changed
=======

* Description.



Deprecated
==========

* Description.



Removed
=======

Kurento has always included several Computer Vision plugins and extension modules, for demonstration purposes. These were used to showcase the powerful, dynamic plug-and-play capabilities of Kurento Pipelines, providing a very visual and somewhat fancy way to convey how easy it is to manipulate video images in real time, with Kurento and OpenCV.

However, Kurento's OpenCV modules had been written against the old, C-based API of OpenCV 2.0. Over time, OpenCV 3.0 evolved into a more modern C++ based API, while keeping some backwards-compatibility with older C code. This was enough for us to keep publishing the Kurento demonstration plugins on Ubuntu 16.04 "Xenial" and Ubuntu 18.04 "Bionic". However, on 2020 the release of Ubuntu 20.04 "Focal", **OpenCV 4.0 marks the point where the Kurento plugin code doesn't compile and must be retired**.

The list of retired code is as follows:

* Plugins that came included in *kms-filters* module:

  - facedetector
  - faceoverlay
  - imageoverlay
  - logooverlay
  - movementdetector

* Plugins that were offered as additional installable modules:

  - kms-chroma
  - kms-crowddetector
  - kms-datachannelexample
  - kms-markerdetector
  - kms-platedetector
  - kms-pointerdetector

Starting with support for OpenCV 4.0, the old OpenCV 2.0 based plugin code cannot be compiled any more. Kurento project maintainers do not have the time, knowledge, or scheduling bandwidth to migrate these plugins into modern OpenCV 4.0 style code, so they will get discontinued until/unless some open-source community members can offer some help with porting them. If you'd like to see these plugins alive again, and would be able to give us a hand, please contact us! :-)



Fixed
=====

* Description.



Other changes
=============

This list includes other changes and fixes contributed by users and/or fellow developers, who merit our sincere appreciation and thanks for sharing their work with the Kurento project:

**RepoName 1**

* "Username for PR" ...

**RepoName 2**

* "Username for PR" ...










Kurento 6.x to 7.0 Upgrade Guide
================================

This section details all API changes that occur between Kurento versions 6 and 7. Following the method or member renames detailed here, you should be able to make the jump to newer versions of Kurento without requiring any rewrites at the logic level.



timestamp -> timestampMillis
----------------------------

Several object classes contained a ``timestamp`` field, which wasn't fine-grained enough, so the ``timestampMillis`` field was introduced to replace the former.

These classes are ``Stats`` (common parent of all Stats classes), and ``RaiseBase`` (common parent of all ``Event`` classes).

* Old: ``timestamp`` - Seconds elapsed since the UNIX Epoch (Jan 1, 1970, UTC)
* New: ``timestampMillis`` - Milliseconds elapsed since the UNIX Epoch (Jan 1, 1970, UTC)



MediaObject and MediaElement
----------------------------

These changes are located in the parent classes of all Kurento elements, so all Kurento classes are affected, such as ``RtpEndpoint``, ``WebRtcEndpoint``, ``PlayerEndpoint``, ``RecorderEndpoint``, etc.



Media Events
~~~~~~~~~~~~

A series of deprecations and renamings that normalize all events into the same naming convention.

* Old: ``MediaFlowOutStateChange`` event
* New: ``MediaFlowOutStateChanged`` event

* Old: ``MediaFlowInStateChange`` event
* New: ``MediaFlowInStateChanged`` event

* Old: ``MediaTranscodingStateChange`` event
* New: ``MediaTranscodingStateChanged`` event



childs -> children
~~~~~~~~~~~~~~~~~~

* Old: ``MediaObject.getChilds()``
* New: ``MediaObject.getChildren()``



setOutputBitrate -> minOutputBitrate, maxOutputBitrate
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

All ``MediaElement``-derived classes had a ``setOutputBitrate()`` method that could be used to set a specific target bitrate for the video stream. Instead, use the setters to specify a minimum and maximum desired target. To replicate the same behavior that ``setOutputBitrate()`` had, just provide the same value as both min and max.

* Old: ``setOutputBitrate()``
* New: ``setMinOutputBitrate()``, ``setMaxOutputBitrate()``



minOuputBitrate, maxOuputBitrate -> minOutputBitrate, maxOutputBitrate
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

These changes fix a typo in the original property names.

* Old: ``getMinOuputBitrate()``, ``setMinOuputBitrate()``
* New: ``getMinOutputBitrate()``, ``setMinOutputBitrate()``

* Old: ``getMaxOuputBitrate()``, ``getMaxOuputBitrate()``
* New: ``setMaxOutputBitrate()``, ``setMaxOutputBitrate()``



WebRtcEndpoint
--------------

ICE Events
~~~~~~~~~~

A series of deprecations and renamings that normalize all events into the same naming convention.

* Old: ``OnIceCandidate`` event
* New: ``IceCandidateFound`` event

* Old: ``OnIceGatheringDone`` event
* New: ``IceGatheringDone`` event

* Old: ``OnIceComponentStateChanged``, ``IceComponentStateChange`` events
* New: ``IceComponentStateChanged`` event

* Old: ``OnDataChannelOpened``, ``DataChannelOpen`` events
* New: ``DataChannelOpened`` event

* Old: ``OnDataChannelClosed``, ``DataChannelClose`` event
* New: ``DataChannelClosed`` event



externalAddress -> externalIPv4, externalIPv6
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Old: ``externalAddress`` setting
* New: ``externalIPv4``, ``externalIPv6`` settings

* Old: ``getExternalAddress()``
* New: ``getExternalIPv4()``, ``getExternalIPv6()``

* Old: ``setExternalAddress()``
* New: ``setExternalIPv4()``, ``setExternalIPv6()``



IceCandidatePair
----------------

Unifies all Kurento "Id" members under the same naming convention.

* Old: ``streamID``
* New: ``streamId``

* Old: ``componentID``
* New: ``componentId``



Stats
-----

inputAudioLatency, inputVideoLatency -> inputLatency
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Old: ``ElementStats.inputAudioLatency``, ``ElementStats.inputVideoLatency`` - Average latency, in nanoseconds.
* New: ``ElementStats.inputLatency`` - Array of average latencies (``MediaLatencyStat[]``), in nanoseconds.



audioE2ELatency, videoE2ELatency -> E2ELatency
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Old: ``EndpointStats.audioE2ELatency``, ``EndpointStats.videoE2ELatency`` - End-to-end latency, in nanoseconds.
* New: ``EndpointStats.E2ELatency`` - Array of average latencies (``MediaLatencyStat[]``), in nanoseconds.
